require_relative 'puzzle'
require_relative 'grid'

module Doku
  class Hexamurai < Puzzle
    include PuzzleOnGrid

    has_glyphs (0..15).to_a
    has_glyph_chars glyphs.collect { |s| "%X"%[s] }
    
    has_template <<END
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
--------+--------+--------+--------
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
--------+--------+--------+--------
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
........|........|........|........
--------+--------+--------+--------
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
        |........|........|
END

    0.upto(31) do |n|
      define_group row(8, n)
      define_group column(n, 8)
    end

    0.upto(15) do |n|
      define_group row(0, n+8)
      define_group row(16, n+8)
      define_group column(n+8, 0)
      define_group column(n+8, 16)
    end

    0.step(28, 4) do |n|
      8.step(20, 4) do |m|
        define_group square_group(n, m)
        define_group square_group(m, n)
      end
    end

    # Inferred groups
    8.upto(23) do |n|
      define_group row(0, n, 8) + row(24, n, 8)
      define_group column(n, 0, 8) + column(n, 24, 8)
    end

  end
end

